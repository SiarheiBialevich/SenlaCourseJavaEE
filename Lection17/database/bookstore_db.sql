-- MySQL Script generated by MySQL Workbench
-- 02/28/18 22:14:36
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema bookstore
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `bookstore` ;

-- -----------------------------------------------------
-- Schema bookstore
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `bookstore` DEFAULT CHARACTER SET utf8 ;
USE `bookstore` ;

-- -----------------------------------------------------
-- Table `bookstore`.`genre`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bookstore`.`genre` ;

CREATE TABLE IF NOT EXISTS `bookstore`.`genre` (
  `id` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`book`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bookstore`.`book` ;

CREATE TABLE IF NOT EXISTS `bookstore`.`book` (
  `id` INT NOT NULL,
  `title` VARCHAR(255) NOT NULL,
  `price` DECIMAL(10) NOT NULL,
  `rating` INT NOT NULL,
  `description` TEXT NOT NULL,
  `fk_genres_id` INT NOT NULL,
  PRIMARY KEY (`id`, `fk_genres_id`),
  INDEX `fk_books_genres1_idx` (`fk_genres_id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`title` ASC),
  CONSTRAINT `fk_books_genres1`
    FOREIGN KEY (`fk_genres_id`)
    REFERENCES `bookstore`.`genre` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`author`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bookstore`.`author` ;

CREATE TABLE IF NOT EXISTS `bookstore`.`author` (
  `id` INT NOT NULL,
  `name` VARCHAR(50) NOT NULL,
  `lastname` VARCHAR(50) NOT NULL,
  `d_birth` VARCHAR(25) NOT NULL,
  `biography` MEDIUMTEXT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `lastname_UNIQUE` (`lastname` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bookstore`.`user` ;

CREATE TABLE IF NOT EXISTS `bookstore`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NOT NULL,
  `lastname` VARCHAR(50) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(20) NOT NULL,
  `role` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`city`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bookstore`.`city` ;

CREATE TABLE IF NOT EXISTS `bookstore`.`city` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`location`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bookstore`.`location` ;

CREATE TABLE IF NOT EXISTS `bookstore`.`location` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(50) NOT NULL,
  `fk_citys_id` INT NOT NULL,
  PRIMARY KEY (`id`, `fk_citys_id`),
  INDEX `fk_locations_citys1_idx` (`fk_citys_id` ASC),
  CONSTRAINT `fk_locations_citys1`
    FOREIGN KEY (`fk_citys_id`)
    REFERENCES `bookstore`.`city` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`dilivery`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bookstore`.`dilivery` ;

CREATE TABLE IF NOT EXISTS `bookstore`.`dilivery` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `shipping_method` VARCHAR(255) NOT NULL,
  `fk_books_id` INT NOT NULL,
  PRIMARY KEY (`id`, `fk_books_id`),
  INDEX `fk_diliverys_books1_idx` (`fk_books_id` ASC),
  CONSTRAINT `fk_diliverys_books1`
    FOREIGN KEY (`fk_books_id`)
    REFERENCES `bookstore`.`book` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`ordering`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bookstore`.`ordering` ;

CREATE TABLE IF NOT EXISTS `bookstore`.`ordering` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `date` DATE NOT NULL,
  `fk_users_id` INT NOT NULL,
  PRIMARY KEY (`id`, `fk_users_id`),
  INDEX `fk_orderings_users1_idx` (`fk_users_id` ASC),
  CONSTRAINT `fk_orderings_users1`
    FOREIGN KEY (`fk_users_id`)
    REFERENCES `bookstore`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`book_author`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bookstore`.`book_author` ;

CREATE TABLE IF NOT EXISTS `bookstore`.`book_author` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `fk_authors_id` INT NOT NULL,
  `fk_books_id` INT NOT NULL,
  PRIMARY KEY (`id`, `fk_authors_id`, `fk_books_id`),
  INDEX `fk_books_authors_books1_idx` (`fk_books_id` ASC),
  INDEX `fk_books_authors_authors1_idx` (`fk_authors_id` ASC),
  CONSTRAINT `fk_authors_has_books_authors1`
    FOREIGN KEY (`fk_authors_id`)
    REFERENCES `bookstore`.`author` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_authors_has_books_books1`
    FOREIGN KEY (`fk_books_id`)
    REFERENCES `bookstore`.`book` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`book_location`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bookstore`.`book_location` ;

CREATE TABLE IF NOT EXISTS `bookstore`.`book_location` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `fk_books_id` INT NOT NULL,
  `fk_locations_id` INT NOT NULL,
  `count` INT NULL,
  PRIMARY KEY (`id`, `fk_books_id`, `fk_locations_id`),
  INDEX `fk_books_locations_locations1_idx` (`fk_locations_id` ASC),
  INDEX `fk_books_locations_books1_idx` (`fk_books_id` ASC),
  CONSTRAINT `fk_books_has_locations_books1`
    FOREIGN KEY (`fk_books_id`)
    REFERENCES `bookstore`.`book` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_books_has_locations_locations1`
    FOREIGN KEY (`fk_locations_id`)
    REFERENCES `bookstore`.`location` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`book_ordering`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bookstore`.`book_ordering` ;

CREATE TABLE IF NOT EXISTS `bookstore`.`book_ordering` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `fk_orderings_id` INT NOT NULL,
  `fk_books_id` INT NOT NULL,
  PRIMARY KEY (`id`, `fk_orderings_id`, `fk_books_id`),
  INDEX `fk_orderings_has_books_books1_idx` (`fk_books_id` ASC),
  INDEX `fk_orderings_has_books_orderings1_idx` (`fk_orderings_id` ASC),
  CONSTRAINT `fk_orderings_has_books_orderings1`
    FOREIGN KEY (`fk_orderings_id`)
    REFERENCES `bookstore`.`ordering` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orderings_has_books_books1`
    FOREIGN KEY (`fk_books_id`)
    REFERENCES `bookstore`.`book` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`auth`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bookstore`.`auth` ;

CREATE TABLE IF NOT EXISTS `bookstore`.`auth` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `fk_users_id` INT NOT NULL,
  PRIMARY KEY (`id`, `fk_users_id`),
  INDEX `fk_auth_users1_idx` (`fk_users_id` ASC),
  CONSTRAINT `fk_auth_users1`
    FOREIGN KEY (`fk_users_id`)
    REFERENCES `bookstore`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`address`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bookstore`.`address` ;

CREATE TABLE IF NOT EXISTS `bookstore`.`address` (
  `id` INT NOT NULL,
  `city` VARCHAR(20) NOT NULL,
  `street` VARCHAR(45) NOT NULL,
  `house_number` INT NOT NULL,
  `apartment_number` INT NOT NULL,
  `post_code` INT NOT NULL,
  `fk_users_id` INT NOT NULL,
  PRIMARY KEY (`id`, `fk_users_id`),
  INDEX `fk_address_users1_idx` (`fk_users_id` ASC),
  CONSTRAINT `fk_address_users1`
    FOREIGN KEY (`fk_users_id`)
    REFERENCES `bookstore`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`binding`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bookstore`.`binding` ;

CREATE TABLE IF NOT EXISTS `bookstore`.`binding` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bookstore`.`book_binding`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bookstore`.`book_binding` ;

CREATE TABLE IF NOT EXISTS `bookstore`.`book_binding` (
  `id` INT NOT NULL,
  `fk_binding_id` INT NOT NULL,
  `fk_book_id` INT NOT NULL,
  PRIMARY KEY (`id`, `fk_binding_id`, `fk_book_id`),
  INDEX `fk_book_binding_binding1_idx` (`fk_binding_id` ASC),
  INDEX `fk_book_binding_book1_idx` (`fk_book_id` ASC),
  CONSTRAINT `fk_book_binding_binding1`
    FOREIGN KEY (`fk_binding_id`)
    REFERENCES `bookstore`.`binding` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_book_binding_book1`
    FOREIGN KEY (`fk_book_id`)
    REFERENCES `bookstore`.`book` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `bookstore`.`city`
-- -----------------------------------------------------
START TRANSACTION;
USE `bookstore`;
INSERT INTO `bookstore`.`city` (`id`, `name`) VALUES (1, 'Brest');
INSERT INTO `bookstore`.`city` (`id`, `name`) VALUES (2, 'Gomel');
INSERT INTO `bookstore`.`city` (`id`, `name`) VALUES (3, 'Grodno');
INSERT INTO `bookstore`.`city` (`id`, `name`) VALUES (4, 'Mahilyow');
INSERT INTO `bookstore`.`city` (`id`, `name`) VALUES (5, 'Minsk');
INSERT INTO `bookstore`.`city` (`id`, `name`) VALUES (6, 'Vitebsk');

COMMIT;

